# ui/tutorial.py
# Tutorial System Module
# Created for Traducteur Ren'Py Pro v2.2.0

"""
Module du syst√®me de tutoriel int√©gr√© avec guide complet
"""

import os
import datetime
import tkinter as tk
from tkinter import messagebox, ttk
from utils.constants import VERSION, THEMES, FILE_NAMES, ensure_folders_exist
from utils.config import config_manager
from utils.logging import log_message

def check_first_launch():
    """
    V√©rifie si c'est le premier lancement de l'application
    
    Returns:
        bool: True si c'est le premier lancement
    """
    # ‚úÖ CORRECTION : Utiliser le nouveau chemin avec FILE_NAMES
    tutorial_flag_file = FILE_NAMES["tutorial_flag"]
    return not os.path.exists(tutorial_flag_file)

def mark_tutorial_shown():
    """
    Marque que le tutoriel a √©t√© affich√©
    """
    try:
        # ‚úÖ CORRECTION : S'assurer que le dossier existe
        ensure_folders_exist()
        
        # ‚úÖ CORRECTION : Utiliser le nouveau chemin
        tutorial_flag_file = FILE_NAMES["tutorial_flag"]
        
        with open(tutorial_flag_file, "w", encoding="utf-8") as f:
            f.write(f"Tutorial shown on: {datetime.datetime.now().isoformat()}\n")
            f.write(f"Version: {VERSION}\n")
            f.write("This file prevents the tutorial from showing again.\n")
            f.write("Delete this file to show the tutorial on next launch.\n")
        log_message("INFO", f"Tutoriel marqu√© comme affich√© dans {tutorial_flag_file}")
    except Exception as e:
        log_message("WARNING", "Impossible de marquer le tutoriel comme affich√©", e)

def show_tutorial():
    """Affiche la fen√™tre de tutoriel compl√®te et d√©taill√©e"""
    import tkinter as tk
    from tkinter import ttk
    
    # V√©rifier et utiliser la fen√™tre principale existante
    root = tk._default_root
    if not root:
        log_message("WARNING", "Impossible d'afficher le tutoriel - pas de fen√™tre principale")
        root = tk.Tk()
        root.withdraw()
        temporary_root = True
    else:
        temporary_root = False
    
    tutorial_window = tk.Toplevel(root)
    tutorial_window.title(f"üéì Guide Complet - Traducteur Ren'Py Pro v{VERSION}")
    tutorial_window.geometry("800x700")
    tutorial_window.resizable(True, True)
    
    if not temporary_root:
        tutorial_window.transient(root)
        tutorial_window.grab_set()
    else:
        def close_tutorial_and_root():
            tutorial_window.destroy()
            if temporary_root:
                root.destroy()
        tutorial_window.protocol("WM_DELETE_WINDOW", close_tutorial_and_root)
        tutorial_window.grab_set()
    
    # Centrer la fen√™tre
    tutorial_window.update_idletasks()
    x = (tutorial_window.winfo_screenwidth() // 2) - (tutorial_window.winfo_width() // 2)
    y = (tutorial_window.winfo_screenheight() // 2) - (tutorial_window.winfo_height() // 2)
    tutorial_window.geometry(f"+{x}+{y}")
    
    # Appliquer le th√®me
    theme = THEMES["dark"] if config_manager.is_dark_mode_enabled() else THEMES["light"]
    tutorial_window.configure(bg=theme["bg"])
    
    # Variable pour la checkbox
    dont_show_again = tk.BooleanVar()
    
    # Frame principal avec scrollbar
    main_frame = tk.Frame(tutorial_window, bg=theme["bg"])
    main_frame.pack(fill='both', expand=True, padx=20, pady=20)
    
    # Canvas et scrollbar
    canvas = tk.Canvas(main_frame, bg=theme["bg"], highlightthickness=0)
    scrollbar = ttk.Scrollbar(main_frame, orient="vertical", command=canvas.yview)
    scrollable_frame = tk.Frame(canvas, bg=theme["bg"])
    
    scrollable_frame.bind(
        "<Configure>",
        lambda e: canvas.configure(scrollregion=canvas.bbox("all"))
    )
    
    canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")
    canvas.configure(yscrollcommand=scrollbar.set)
    
    # Header
    header_frame = tk.Frame(scrollable_frame, bg=theme["bg"])
    header_frame.pack(fill='x', pady=(0, 20))
    
    title_tutorial = tk.Label(
        header_frame,
        text=f"üéì Traducteur Ren'Py Pro v{VERSION}",
        font=('Segoe UI Emoji', 18, 'bold'),
        bg=theme["bg"],
        fg=theme["accent"]
    )
    title_tutorial.pack()
    
    subtitle_tutorial = tk.Label(
        header_frame,
        text="Guide complet pour traduire vos scripts Ren'Py efficacement",
        font=('Segoe UI Emoji', 11),
        bg=theme["bg"],
        fg=theme["fg"]
    )
    subtitle_tutorial.pack(pady=(5, 0))
    
    # ==================== CONTENU DU TUTORIEL ====================
    
    # Section 1: Vue d'ensemble
    create_section(scrollable_frame, theme, "üéØ Vue d'ensemble", [
        "Le Traducteur Ren'Py Pro est un outil sp√©cialis√© pour g√©rer les traductions de jeux Ren'Py.",
        "Il extrait intelligemment les textes, prot√®ge les codes sp√©ciaux, et reconstruit les fichiers traduits.",
        "Compatible avec les fichiers g√©n√©r√©s par le SDK Ren'Py (commande generate translations).",
        "Supporte le traitement par lots, les modes multiples d'entr√©e, et la validation automatique."
    ])
    
    # Section 2: Workflow complet de traduction
    create_section(scrollable_frame, theme, "üìã Workflow complet de traduction", [
        "1Ô∏è‚É£ G√©n√©rez vos fichiers de traduction avec le SDK Ren'Py (comme d'habitude)",
        "2Ô∏è‚É£ Ouvrez le fichier .rpy dans le Traducteur (bouton bleu ou glisser-d√©poser)",
        "3Ô∏è‚É£ Cliquez sur 'Extraire' pour cr√©er les fichiers de texte √† traduire",
        "4Ô∏è‚É£ Traduisez les fichiers .txt avec l'outil de votre choix (IA, CAT tool, manuellement)",
        "5Ô∏è‚É£ Collez/remplacez le contenu traduit dans les m√™mes fichiers .txt",
        "6Ô∏è‚É£ Cliquez sur 'Reconstruire' pour g√©n√©rer le fichier .rpy traduit final",
        "üí° Les codes (01), (02)... sont automatiquement restaur√©s √† leur forme originale"
    ])
    
    # Section : Traduction partielle
    create_section(scrollable_frame, theme, "‚ö° Traduction partielle (mise √† jour cibl√©e)", [
        "Pour traduire uniquement des sections sp√©cifiques :",
        "1Ô∏è‚É£ Copiez la section modifi√©e depuis votre fichier .rpy",
        "2Ô∏è‚É£ Basculez en mode Ctrl+V (bouton violet)",
        "3Ô∏è‚É£ Collez le contenu avec Ctrl+V",
        "4Ô∏è‚É£ Proc√©dez normalement : Extraire ‚Üí Traduire ‚Üí Reconstruire",
        "5Ô∏è‚É£ Les nouvelles traductions s'ajoutent au fichier traduit existant",
        "üí° Id√©al pour les mises √† jour de jeu ou corrections ponctuelles"
    ])
    
    # Section 4: Modes d'entr√©e
    create_section(scrollable_frame, theme, "üéØ Modes d'entr√©e disponibles", [
        "üìÇ Fichier unique : Ouvrez un seul fichier .rpy √† la fois",
        "üìÅ Mode dossier : Traitez tous les fichiers .rpy d'un dossier en s√©quence",
        "üéØ Drag & Drop : Glissez directement vos fichiers dans la zone de texte",
        "üìã Mode Ctrl+V : Collez du contenu Ren'Py depuis le presse-papier",
        "üí° Basculez entre D&D et Ctrl+V avec le bouton violet",
        "‚ö° Mode partiel : Copiez seulement les sections modifi√©es pour une traduction cibl√©e"
    ])
    
    # Section 5: Organisation des fichiers
    create_section(scrollable_frame, theme, "üìÅ Organisation intelligente des fichiers", [
        "üì¶ Structure automatique : temporaires/[NomDuJeu]/",
        "‚îú‚îÄ‚îÄ üìÅ fichiers_a_traduire/ : Contient les .txt √† traduire",
        "‚îú‚îÄ‚îÄ üìÅ fichiers_a_ne_pas_traduire/ : Mappings et donn√©es techniques",
        "üìÅ avertissement/ : Rapports de validation",
        "üìÅ dossier_configs/ : Configuration, logs et param√®tres",
        "",
        "üéØ Fichiers cr√©√©s lors de l'extraction :",
        "‚Ä¢ [nom].txt : Textes principaux √† traduire",
        "‚Ä¢ [nom]_asterix.txt : Expressions *entre ast√©risques* (narration, pens√©es)",
        "‚Ä¢ [nom]_empty.txt : Textes vides et espaces (si pr√©sents)",
        "‚Ä¢ [nom]_mapping.txt : Table de conversion des codes prot√©g√©s"
    ])
    
    # Section 6: Fonctionnalit√©s avanc√©es
    create_section(scrollable_frame, theme, "üöÄ Fonctionnalit√©s avanc√©es", [
        "üõ°Ô∏è Sauvegardes automatiques : Cr√©√©es avant chaque extraction",
        "‚úÖ Validation intelligente : V√©rifie la coh√©rence OLD/NEW",
        "‚ö†Ô∏è D√©tection d'erreurs : Balises orphelines, placeholders manquants",
        "üìä Statistiques d√©taill√©es : Temps de traitement, nombre de textes",
        "üîÑ Mode √©crasement ou nouveau fichier selon votre choix",
        "üìÇ Auto-Open : Ouvre automatiquement les fichiers cr√©√©s (d√©sactivable)",
        "üåô Th√®me sombre/clair adaptatif"
    ])
    
    # Section 7: Protection des codes
    create_section(scrollable_frame, theme, "üîí Protection automatique des codes", [
        "Le traducteur prot√®ge automatiquement :",
        "‚Ä¢ Les balises {b}, {i}, {color=#hex}, etc.",
        "‚Ä¢ Les variables [player_name], [count], etc.",
        "‚Ä¢ Les codes sp√©ciaux \\n, %s, %(variable)s",
        "‚Ä¢ Les expressions conditionnelles et placeholders",
        "‚ö†Ô∏è NE JAMAIS modifier les codes (01), (02), (D1), (C1) dans vos traductions !",
        "‚úÖ Ils seront automatiquement restaur√©s lors de la reconstruction"
    ])
    
    # Section 8: R√©solution de probl√®mes
    create_section(scrollable_frame, theme, "üîß R√©solution de probl√®mes courants", [
        "‚ùå 'Fichier non valide' : V√©rifiez que c'est bien un .rpy de traduction Ren'Py",
        "‚ùå 'Nombre de traductions incorrect' : Assurez-vous d'avoir traduit TOUTES les lignes",
        "‚ùå 'Placeholders malform√©s' : Ne modifiez pas les codes (01), (02)...",
        "‚ùå 'Drag & Drop ne fonctionne pas' : Basculez en mode Ctrl+V",
        "‚ùå 'Validation √©chou√©e fichier _empty.txt' : Ce fichier peut contenir des lignes vides",
        "üí° Consultez le dossier 'avertissements' pour les rapports d√©taill√©s",
        "üí° Les fichiers logs sont dans le dossier 'dossier_configs' pour le d√©bogage"
    ])
    
    # Section 9: Raccourcis et astuces
    create_section(scrollable_frame, theme, "‚å®Ô∏è Raccourcis et astuces", [
        "‚Ä¢ Double-cliquez sur la zone de texte vide pour ouvrir un fichier",
        "‚Ä¢ Glissez un dossier entier pour activer le mode batch",
        "‚Ä¢ Utilisez 'R√©initialiser' pour nettoyer la base de donn√©es",
        "‚Ä¢ Le bouton 'Temporaire' ouvre le dossier du jeu en cours",
        "‚Ä¢ Les temps de traitement sont sauvegard√©s dans dossier_configs",
        "‚Ä¢ Activez/d√©sactivez la validation pour un traitement plus rapide",
        "‚Ä¢ Les fichiers _empty.txt peuvent contenir des lignes vides - c'est normal"
    ])
    
    # ==================== FIN DU CONTENU ====================
    
    # Separator
    separator_frame = tk.Frame(scrollable_frame, bg=theme["bg"], height=2)
    separator_frame.pack(fill='x', pady=15)
    
    # Frame pour les contr√¥les du bas
    bottom_frame = tk.Frame(scrollable_frame, bg=theme["bg"])
    bottom_frame.pack(fill='x', pady=(0, 15))
    
    # Checkbox "Ne plus afficher"
    checkbox_frame = tk.Frame(bottom_frame, bg=theme["bg"])
    checkbox_frame.pack(side='left')
    
    checkbox = tk.Checkbutton(
        checkbox_frame,
        text="Ne plus afficher ce guide au d√©marrage",
        variable=dont_show_again,
        font=('Segoe UI Emoji', 10),
        bg=theme["bg"],
        fg=theme["fg"],
        selectcolor=theme["frame_bg"],
        activebackground=theme["bg"],
        activeforeground=theme["fg"]
    )
    checkbox.pack()
    
    # Boutons
    buttons_frame = tk.Frame(bottom_frame, bg=theme["bg"])
    buttons_frame.pack(side='right')
    
    def close_tutorial():
        if dont_show_again.get():
            mark_tutorial_shown()
        tutorial_window.destroy()
        if temporary_root:
            try:
                root.destroy()
            except:
                pass
    
    def open_tutorial_again():
        tutorial_window.destroy()
        if temporary_root:
            try:
                root.destroy()
            except:
                pass
    
    btn_close = tk.Button(
        buttons_frame,
        text="‚úÖ J'ai compris !",
        font=('Segoe UI Emoji', 11, 'bold'),
        bg=theme["accent"],
        fg=theme["button_fg"],
        activebackground='#157347',
        bd=0,
        pady=10,
        padx=25,
        command=close_tutorial
    )
    btn_close.pack(side='right', padx=(10, 0))
    
    btn_later = tk.Button(
        buttons_frame,
        text="üîÑ Revoir plus tard",
        font=('Segoe UI Emoji', 10),
        bg=theme["warning"],
        fg='#000000',
        activebackground='#ffcc02',
        bd=0,
        pady=8,
        padx=15,
        command=open_tutorial_again
    )
    btn_later.pack(side='right')
    
    # Configurer le canvas et scrollbar
    canvas.pack(side="left", fill="both", expand=True)
    scrollbar.pack(side="right", fill="y")
    
    # Permettre le scroll avec la molette
    def on_mousewheel(event):
        canvas.yview_scroll(int(-1*(event.delta/120)), "units")
    
    tutorial_window.bind("<MouseWheel>", on_mousewheel)
    
    # Bind pour les syst√®mes Linux
    def on_button_4(event):
        canvas.yview_scroll(-1, "units")
    
    def on_button_5(event):
        canvas.yview_scroll(1, "units")
    
    tutorial_window.bind("<Button-4>", on_button_4)
    tutorial_window.bind("<Button-5>", on_button_5)
    
    # Focus sur le bouton principal
    btn_close.focus_set()
    
    log_message("INFO", "Tutoriel complet affich√©")

def create_section(parent, theme, title, items):
    """
    Cr√©e une section du tutoriel avec un style am√©lior√©
    
    Args:
        parent: Widget parent
        theme: Th√®me de couleurs
        title: Titre de la section
        items: Liste des √©l√©ments de la section
    """
    try:
        section_frame = tk.Frame(parent, bg=theme["frame_bg"], relief='solid', bd=1)
        section_frame.pack(fill='x', pady=8, padx=10)
        
        # Titre de section avec ic√¥ne
        section_title = tk.Label(
            section_frame,
            text=title,
            font=('Segoe UI Emoji', 13, 'bold'),
            bg=theme["frame_bg"],
            fg=theme["accent"]
        )
        section_title.pack(anchor='w', padx=15, pady=(12, 8))
        
        # Contenu de la section
        for item in items:
            if item == "":  # Ligne vide pour espacer
                spacer = tk.Frame(section_frame, bg=theme["frame_bg"], height=5)
                spacer.pack()
            else:
                # D√©terminer le padding selon le type de contenu
                left_pad = 25 if item.startswith(('‚Ä¢', '‚îú', '‚îî', '‚îÄ')) else 15
                left_pad = 35 if item.startswith('  ') else left_pad
                
                item_label = tk.Label(
                    section_frame,
                    text=item,
                    font=('Segoe UI Emoji', 10),
                    bg=theme["frame_bg"],
                    fg=theme["fg"],
                    justify='left',
                    wraplength=750,
                    anchor='w'
                )
                item_label.pack(anchor='w', padx=(left_pad, 15), pady=2)
        
        # Espacement final
        spacer = tk.Frame(section_frame, bg=theme["frame_bg"], height=10)
        spacer.pack()
        
    except Exception as e:
        log_message("WARNING", f"Erreur cr√©ation section tutoriel: {str(e)}")

def show_quick_help(parent, topic=None):
    """
    Affiche une aide contextuelle rapide pour un sujet sp√©cifique
    
    Args:
        parent: Widget parent
        topic: Sujet sp√©cifique ('extraction', 'reconstruction', 'validation', etc.)
    """
    help_topics = {
        'extraction': {
            'title': "‚ö° Aide - Extraction",
            'content': [
                "L'extraction analyse votre fichier .rpy et s√©pare :",
                "‚Ä¢ Les textes √† traduire dans des fichiers .txt",
                "‚Ä¢ Les codes sp√©ciaux sont prot√©g√©s par des placeholders",
                "‚Ä¢ Les expressions *entre ast√©risques* vont dans un fichier s√©par√©",
                "",
                "üí° Les fichiers cr√©√©s s'ouvrent automatiquement si Auto-Open est activ√©"
            ]
        },
        'reconstruction': {
            'title': "üîß Aide - Reconstruction",
            'content': [
                "La reconstruction assemble vos traductions :",
                "‚Ä¢ Lit les fichiers .txt traduits",
                "‚Ä¢ Restaure tous les codes prot√©g√©s",
                "‚Ä¢ Cr√©e le fichier .rpy final",
                "",
                "‚ö†Ô∏è Assurez-vous d'avoir traduit TOUTES les lignes",
                "üí° Choisissez entre √©craser ou cr√©er un nouveau fichier"
            ]
        },
        'validation': {
            'title': "‚úÖ Aide - Validation",
            'content': [
                "La validation v√©rifie la coh√©rence OLD/NEW :",
                "‚Ä¢ D√©tecte les balises manquantes ou malform√©es",
                "‚Ä¢ V√©rifie les placeholders et variables",
                "‚Ä¢ Cr√©e un rapport dans le dossier avertissements",
                "",
                "üí° D√©sactivez la validation pour un traitement plus rapide",
                "üí° Les fichiers _empty.txt peuvent contenir des lignes vides"
            ]
        }
    }
    
    if topic and topic in help_topics:
        info = help_topics[topic]
        messagebox.showinfo(info['title'], '\n'.join(info['content']))
    else:
        # Afficher le tutoriel complet si pas de topic sp√©cifique
        show_tutorial()