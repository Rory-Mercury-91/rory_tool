# .github/workflows/build-releases.yml
name: Build & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

env:
  RELEASE_NAME: ${{ github.ref_name }}

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # D√©pendances principales du Traducteur Ren'Py Pro
          pip install tkinter-dnd2
          pip install pyinstaller
          
          # Si vous avez un requirements.txt, d√©commentez la ligne suivante :
          # pip install -r requirements.txt

      - name: Build Windows Executable
        run: |
          echo "Construction du Traducteur Ren'Py Pro pour Windows..."
          # Cr√©er les dossiers
          mkdir artifacts
          mkdir artifacts/windows
          
          # Cr√©er l'ex√©cutable avec PyInstaller
          # Options :
          # --onefile : Un seul fichier ex√©cutable
          # --windowed : Interface graphique (pas de console)
          # --name : Nom de l'ex√©cutable
          # --icon : Ic√¥ne (si vous en avez une)
          pyinstaller --onefile --windowed --name "TraducteurRenPyPro" main.py
          
          # Copier l'ex√©cutable
          copy "dist/TraducteurRenPyPro.exe" "artifacts/windows/"
          
          # Cr√©er l'archive avec un nom descriptif
          Compress-Archive -Path "artifacts/windows/TraducteurRenPyPro.exe" -DestinationPath "artifacts/windows/TraducteurRenPyPro-v2.4.4-Windows.zip"
        shell: pwsh

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ env.RELEASE_NAME }}
          path: artifacts/windows/*.zip

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          # D√©pendances syst√®me pour Tkinter et interface graphique
          sudo apt-get update
          sudo apt-get install -y python3-tk python3-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # D√©pendances du Traducteur Ren'Py Pro
          pip install tkinter-dnd2
          pip install pyinstaller
          
          # Si vous avez un requirements.txt, d√©commentez :
          # pip install -r requirements.txt

      - name: Build Linux Binary
        run: |
          echo "Construction du Traducteur Ren'Py Pro pour Linux..."
          mkdir -p artifacts/linux
          
          # Cr√©er l'ex√©cutable Linux
          pyinstaller --onefile --name "TraducteurRenPyPro" main.py
          
          # Copier l'ex√©cutable
          cp dist/TraducteurRenPyPro artifacts/linux/
          
          # Rendre ex√©cutable (important pour Linux)
          chmod +x artifacts/linux/TraducteurRenPyPro
          
          # Cr√©er l'archive tar.gz
          tar -czf artifacts/linux/TraducteurRenPyPro-v2.4.4-Linux.tar.gz -C artifacts/linux TraducteurRenPyPro

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ env.RELEASE_NAME }}
          path: artifacts/linux/*.tar.gz

  create-release:
    name: Create GitHub Release
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    # Ne cr√©er une release que pour les tags
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-${{ env.RELEASE_NAME }}
          path: release/windows

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-${{ env.RELEASE_NAME }}
          path: release/linux

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            release/windows/*.zip
            release/linux/*.tar.gz
          body: |
            ## üéÆ Traducteur Ren'Py Pro ${{ github.ref_name }}
            
            **Outil de traduction avanc√© pour les scripts Ren'Py**
            
            ### üì• T√©l√©chargements
            - **Windows** : `TraducteurRenPyPro-v2.4.4-Windows.zip`
            - **Linux** : `TraducteurRenPyPro-v2.4.4-Linux.tar.gz`
            
            ### üöÄ Installation
            
            **Windows :**
            1. T√©l√©chargez le fichier `.zip`
            2. Extraire l'archive
            3. Ex√©cutez `TraducteurRenPyPro.exe`
            
            **Linux :**
            1. T√©l√©chargez le fichier `.tar.gz`
            2. Extraire : `tar -xzf TraducteurRenPyPro-v2.4.4-Linux.tar.gz`
            3. Ex√©cutez : `./TraducteurRenPyPro`
            
            ### ‚ú® Fonctionnalit√©s principales
            - üìö Syst√®me de glossaire permanent
            - ‚ö° Extraction intelligente avec protection des codes
            - üîß Reconstruction pr√©cise
            - üéØ Support Drag & Drop et Ctrl+V
            - ‚úÖ Validation automatique des traductions
            - üõ°Ô∏è Sauvegardes automatiques de s√©curit√©
            - üåô Interface moderne avec th√®mes
            
            ### üÜï Nouveaut√©s v2.4.4
            - Architecture refactoris√©e avec modules enhanced
            - Structure organis√©e par jeu : `temporaires/[NomDuJeu]/`
            - Glossaire permanent pour termes r√©currents
            - Validation avanc√©e avec rapports d√©taill√©s
            - Interface am√©lior√©e et th√®mes vraiment diff√©rents
            
            ### üí° Utilisation
            1. G√©n√©rez vos fichiers de traduction avec le SDK Ren'Py
            2. Chargez le fichier `.rpy` dans l'outil
            3. Cliquez sur "‚ö° Extraire" pour cr√©er les fichiers √† traduire
            4. Traduisez les fichiers `.txt` g√©n√©r√©s
            5. Cliquez sur "üîß Reconstruire" pour cr√©er le fichier traduit
            
            ---
            
            üéì **Guide complet** disponible dans l'application via le bouton "üéì Aide"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}