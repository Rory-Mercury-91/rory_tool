name: Build Multi-Platform Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  RELEASE_NAME: ${{ github.ref_name }}

jobs:
  # Build sous Windows
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build executable
        run: |
          pyinstaller main.py --name="TraducteurRenPyPro" --onefile --windowed --noconfirm --clean \
            --hidden-import=tkinterdnd2 \
            --hidden-import=utils.constants \
            --hidden-import=utils.config \
            --hidden-import=utils.logging \
            --hidden-import=core.extraction \
            --hidden-import=core.reconstruction \
            --hidden-import=core.validation \
            --hidden-import=core.file_manager \
            --hidden-import=core.coherence_checker \
            --hidden-import=ui.backup_manager \
            --hidden-import=ui.interface \
            --hidden-import=ui.tutorial \
            --add-data="utils;utils" \
            --add-data="core;core" \
            --add-data="ui;ui"

      - name: Package Windows release
        id: package-windows
        shell: bash
        run: |
          mkdir -p release/windows
          zip -j release/windows/${{ env.RELEASE_NAME }}-windows.zip dist/TraducteurRenPyPro.exe

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: release/windows/${{ env.RELEASE_NAME }}-windows.zip

  # Build sous Linux
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pyinstaller

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Build executable
        run: |
          pyinstaller main.py --name="TraducteurRenPyPro" --onefile --noconfirm --clean \
            --hidden-import=tkinterdnd2 \
            --hidden-import=utils.constants \
            --hidden-import=utils.config \
            --hidden-import=utils.logging \
            --hidden-import=core.extraction \
            --hidden-import=core.reconstruction \
            --hidden-import=core.validation \
            --hidden-import=core.file_manager \
            --hidden-import=core.coherence_checker \
            --hidden-import=ui.backup_manager \
            --hidden-import=ui.interface \
            --hidden-import=ui.tutorial \
            --add-data="utils:utils" \
            --add-data="core:core" \
            --add-data="ui:ui"

      - name: Package Linux release
        id: package-linux
        run: |
          mkdir -p release/linux
          tar czf release/linux/${{ env.RELEASE_NAME }}-linux.tar.gz dist/TraducteurRenPyPro

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          path: release/linux/${{ env.RELEASE_NAME }}-linux.tar.gz

  # Cr√©ation de la release GitHub
  release:
    name: Create GitHub Release
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-artifact
          path: release/windows

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-artifact
          path: release/linux

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            release/windows/${{ env.RELEASE_NAME }}-windows.zip
            release/linux/${{ env.RELEASE_NAME }}-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
