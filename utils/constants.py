# utils/constants.py
# Constants and Configuration Module
# Created for Traducteur Ren'Py Pro v1.5.0

"""
Module contenant toutes les constantes de l'application
"""

import os

# Version de l'application
VERSION = "1.5.0"

# Dossiers d'organisation
FOLDERS = {
    "temp": "temporaire",
    "backup": "sauvegardes",
    "warnings": "avertissements",
    "logs": "logs"
}

# Couleurs pour les th√®mes
THEMES = {
    "dark": {
        "bg": "#2b2b2b",
        "fg": "#ffffff",
        "frame_bg": "#3c3c3c", 
        "button_bg": "#3c3c3c",
        "entry_bg": "#404040",
        "entry_fg": "#ffffff",
        "select_bg": "#0078d4",
        "select_fg": "#ffffff",
        "accent": "#4CAF50",
        "warning": "#ffc107", 
        "danger": "#dc3545",
        "button_fg": "#000000"
    },
    "light": {
        # Mode "confortable" - Ni trop clair, ni trop fonc√©
        "bg": "#f6f6f4",           # Gris chaud tr√®s clair
        "fg": "#333333",           # Gris fonc√© standard
        "frame_bg": "#eeebe7",     # Beige gris clair
        "button_bg": "#eeebe7",    # Harmonis√© avec frame
        "entry_bg": "#ffffff",     # Blanc pur pour le texte (lisibilit√©)
        "entry_fg": "#2c2c2c",     # Gris tr√®s fonc√© pour contraste
        "select_bg": "#4a90e2",    # Bleu plus doux
        "select_fg": "#ffffff",    # Blanc sur bleu
        "accent": "#43a047",       # Vert √©quilibr√©
        "warning": "#fb8c00",      # Orange √©quilibr√©
        "danger": "#d32f2f",       # Rouge standard
        "button_fg": "#000000"     # Noir pour lisibilit√©
    }
}

# Configuration des fen√™tres
WINDOW_CONFIG = {
    "title": f"üéÆ Traducteur Ren'Py Pro v{VERSION}",
    "geometry": "1100x700",  # MODIFI√â : √âlargi de 1000x700 √† 1100x700
    "min_size": (900, 600)   # MODIFI√â : Minimum augment√© aussi
}

# Codes sp√©ciaux Ren'Py √† prot√©ger
SPECIAL_CODES = [
    r'%%',           # Pourcentage litt√©ral
    r'\\%',          # Pourcentage √©chapp√©
    r'\\n',          # Retour √† la ligne
    r'\\t',          # Tabulation
    r'\\r',          # Retour chariot
    r'\\\\',         # Backslash √©chapp√©
    r'\\[a-zA-Z]',   # Autres s√©quences d'√©chappement
    r'%[a-zA-Z_][a-zA-Z0-9_]*',  # Variables Ren'Py style %variable
    r'%\([^)]+\)',   # Variables Ren'Py style %(variable)
    r'--',           # Tirets doubles
    r'‚Äî',            # Tiret cadratin
    r'‚Äì',            # Tiret demi-cadratin
    r'\.\.\.+',      # Points de suspension
]

# Ordres de protection pour les textes vides
PROTECTION_ORDER = [
    (r'\"', 'Guillemets √©chapp√©s'),  # EN PREMIER !
    ('""', 'Cha√Ænes vides'),
    ('" "', 'Un espace'),
    ('"  "', 'Deux espaces'),
    ('"   "', 'Trois espaces')
]

# Types de fichiers support√©s
SUPPORTED_FILES = {
    "renpy": [("Ren'Py script", "*.rpy")],
    "text": [("Texte", "*.txt")],
    "all": [("Tous fichiers", "*.*")]
}

# Messages d'interface
MESSAGES = {
    "extraction_success": "‚úÖ Extraction termin√©e en {time:.2f}s !",
    "reconstruction_success": "‚úÖ Fichier traduit cr√©√© en {time:.2f}s",
    "no_file_loaded": "‚ö†Ô∏è Erreur: Chargez d'abord un fichier .rpy",
    "files_missing": "‚ö†Ô∏è Erreur: Fichiers manquants",
    "extraction_in_progress": "‚öôÔ∏è Extraction en cours...",
    "reconstruction_in_progress": "üîß Reconstruction en cours..."
}

# Configuration par d√©faut
DEFAULT_CONFIG = {
    "last_directory": "",
    "auto_open_files": True,
    "dark_mode": True,
    "validation_enabled": True,
    "version": VERSION
}

# Noms de fichiers avec chemins organis√©s
FILE_NAMES = {
    "config": "config.json",
    "log": os.path.join(FOLDERS["logs"], "log.txt"),
    "temps": "temps.txt",  # Reste √† la racine pour facilit√© d'acc√®s
    "tutorial_flag": "tutorial_shown.flag"
}

# Fonction utilitaire pour cr√©er les dossiers
def ensure_folders_exist():
    """Cr√©e tous les dossiers n√©cessaires s'ils n'existent pas"""
    for folder_name, folder_path in FOLDERS.items():
        try:
            if not os.path.exists(folder_path):
                os.makedirs(folder_path, exist_ok=True)
        except Exception:
            pass  # √âchec silencieux